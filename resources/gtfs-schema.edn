[
 ;; agency
 {:db/id #db/id[:db.part/db]
  :db/ident :agency/id
  :db/valueType :db.type/string
  :db/unique :db.unique/identity
  :db/cardinality :db.cardinality/one
  :db/doc "The agency_id field is an ID that uniquely identifies a transit agency. A transit feed may represent data from more than one agency. The agency_id is dataset unique. This field is optional for transit feeds that only contain data for a single agency."
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db]
  :db/ident :agency/name
  :db/index true
  :db/valueType :db.type/string
  :db/cardinality :db.cardinality/one
  :db/doc "The agency_name field contains the full name of the transit agency. Google Maps will display this name."
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db]
  :db/ident :agency/url
  :db/index true
  :db/valueType :db.type/string
  :db/cardinality :db.cardinality/one
  :db/doc "The agency_url field contains the URL of the transit agency. The value must be a fully qualified URL that includes http:// or https://, and any special characters in the URL must be correctly escaped. See http://www.w3.org/Addressing/URL/4_URI_Recommentations.html for a description of how to create fully qualified URL values."
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db]
  :db/ident :agency/timezone
  :db/index true
  :db/valueType :db.type/string
  :db/cardinality :db.cardinality/one
  :db/doc "The agency_timezone field contains the timezone where the transit agency is located. Timezone names never contain the space character but may contain an underscore. Please refer to http://en.wikipedia.org/wiki/List_of_tz_zones for a list of valid values. If multiple agencies are specified in the feed, each must have the same agency_timezone."
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db]
  :db/ident :agency/lang
  :db/index true
  :db/valueType :db.type/string
  :db/cardinality :db.cardinality/one
  :db/doc "The agency_lang field contains a two-letter ISO 639-1 code for the primary language used by this transit agency. The language code is case-insensitive (both en and EN are accepted). This setting defines capitalization rules and other language-specific settings for all text contained in this transit agency's feed. Please refer to http://www.loc.gov/standards/iso639-2/php/code_list.php for a list of valid values."
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db]
  :db/ident :agency/phone
  :db/valueType :db.type/string
  :db/cardinality :db.cardinality/one
  :db/doc "The agency_phone field contains a single voice telephone number for the specified agency. This field is a string value that presents the telephone number as typical for the agency's service area. It can and should contain punctuation marks to group the digits of the number. Dialable text (for example, TriMet's \"503-238-RIDE\") is permitted, but the field must not contain any other descriptive text."
  :db.install/_attribute :db.part/db}

 ;; routes
 {:db/id #db/id[:db.part/db]
  :db/ident :route/id
  :db/valueType :db.type/string
  :db/unique :db.unique/identity
  :db/cardinality :db.cardinality/one
  :db/doc "The route_id field contains an ID that uniquely identifies a route. The route_id is dataset unique."
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db]
  :db/ident :route/agency
  :db/index true
  :db/valueType :db.type/ref
  :db/cardinality :db.cardinality/one
  :db/doc "The agency_id field defines an agency for the specified route. This value is referenced from the agency.txt file. Use this field when you are providing data for routes from more than one agency."
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db]
  :db/ident :route/short-name
  :db/index true
  :db/valueType :db.type/string
  :db/cardinality :db.cardinality/one
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db]
  :db/ident :route/long-name
  :db/index true
  :db/valueType :db.type/string
  :db/cardinality :db.cardinality/one
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db]
  :db/ident :route/description
  :db/valueType :db.type/string
  :db/cardinality :db.cardinality/one
  :db/fulltext true
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db] ; TODO: string for now -- might update to enum
  :db/ident :route/type
  :db/index true
  :db/valueType :db.type/string
  :db/cardinality :db.cardinality/one
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db]
  :db/ident :route/url
  :db/index true
  :db/valueType :db.type/string
  :db/cardinality :db.cardinality/one
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db]
  :db/ident :route/color
  :db/valueType :db.type/string
  :db/cardinality :db.cardinality/one
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db]
  :db/ident :route/text-color
  :db/valueType :db.type/string
  :db/cardinality :db.cardinality/one
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db]
  :db/ident :route/trips
  :db/index true
  :db/isComponent true
  :db/valueType :db.type/ref
  :db/cardinality :db.cardinality/many
  :db.install/_attribute :db.part/db}

 ;; stops
 {:db/id #db/id[:db.part/db]
  :db/ident :stop/id
  :db/valueType :db.type/string
  :db/unique :db.unique/identity
  :db/cardinality :db.cardinality/one
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db]
  :db/ident :stop/code
  :db/valueType :db.type/string
  :db/unique :db.unique/identity
  :db/cardinality :db.cardinality/one
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db]
  :db/ident :stop/name
  :db/index true
  :db/valueType :db.type/string
  :db/cardinality :db.cardinality/one
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db]
  :db/ident :stop/description
  :db/valueType :db.type/string
  :db/cardinality :db.cardinality/one
  :db/fulltext true
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db]
  :db/ident :stop/latitude
  :db/index true
  :db/valueType :db.type/double
  :db/cardinality :db.cardinality/one
  :db/doc "The stop_lat field contains the latitude of a stop or station. The field value must be a valid WGS 84 latitude."
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db]
  :db/ident :stop/longitude
  :db/index true
  :db/valueType :db.type/double
  :db/cardinality :db.cardinality/one
  :db/doc "The stop_lon field contains the longitude of a stop or station. The field value must be a valid WGS 84 longitude value from -180 to 180."
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db]
  :db/ident :stop/url
  :db/index true
  :db/valueType :db.type/string
  :db/cardinality :db.cardinality/one
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db] ; TODO: might update to enum
  :db/ident :stop/location-type
  :db/index true
  :db/valueType :db.type/long
  :db/cardinality :db.cardinality/one
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db]
  :db/ident :stop/parent-station
  :db/index true
  :db/valueType :db.type/string
  :db/cardinality :db.cardinality/one
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db]
  :db/ident :stop/wheelchair-boarding
  :db/valueType :db.type/long
  :db/cardinality :db.cardinality/one
  :db.install/_attribute :db.part/db}

 ;; calendar
 {:db/id #db/id[:db.part/db]
  :db/ident :service/id
  :db/valueType :db.type/string
  :db/unique :db.unique/identity
  :db/cardinality :db.cardinality/one
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db]
  :db/ident :service/start-date
  :db/valueType :db.type/instant
  :db/cardinality :db.cardinality/one
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db]
  :db/ident :service/end-date
  :db/valueType :db.type/instant
  :db/cardinality :db.cardinality/one
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db]
  :db/ident :service/days
  :db/valueType :db.type/ref
  :db/cardinality :db.cardinality/many
  :db/doc "List of days the service is active."
  :db.install/_attribute :db.part/db}

 [:db/add #db/id[:db.part/user] :db/ident :calendar.day/monday]
 [:db/add #db/id[:db.part/user] :db/ident :calendar.day/tuesday]
 [:db/add #db/id[:db.part/user] :db/ident :calendar.day/wednesday]
 [:db/add #db/id[:db.part/user] :db/ident :calendar.day/thursday]
 [:db/add #db/id[:db.part/user] :db/ident :calendar.day/friday]
 [:db/add #db/id[:db.part/user] :db/ident :calendar.day/saturday]
 [:db/add #db/id[:db.part/user] :db/ident :calendar.day/sunday]

 ;; shapes
 {:db/id #db/id[:db.part/db]
  :db/ident :shape/id
  :db/valueType :db.type/string
  :db/unique :db.unique/identity
  :db/cardinality :db.cardinality/one
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db]
  :db/ident :shape/points
  :db/isComponent true
  :db/valueType :db.type/ref
  :db/cardinality :db.cardinality/many
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db]
  :db/ident :shape.point/sequence
  :db/valueType :db.type/long
  :db/cardinality :db.cardinality/one
  :db/doc "The shape_pt_sequence field associates the latitude and longitude of a shape point with its sequence order along the shape. The values for shape_pt_sequence must be non-negative integers, and they must increase along the trip.

For example, if the shape \"A_shp\" has three points in its definition, the shapes.txt file might contain these rows to define the shape:

A_shp,37.61956,-122.48161,0
A_shp,37.64430,-122.41070,6
A_shp,37.65863,-122.30839,11"
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db]
  :db/ident :shape.point/distance-traveled
  :db/valueType :db.type/double
  :db/cardinality :db.cardinality/one
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db]
  :db/ident :shape.point/latitude
  :db/valueType :db.type/double
  :db/cardinality :db.cardinality/one
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db]
  :db/ident :shape.point/longitude
  :db/valueType :db.type/double
  :db/cardinality :db.cardinality/one
  :db.install/_attribute :db.part/db}

 ;; trips
 {:db/id #db/id[:db.part/db]
  :db/ident :trip/id
  :db/valueType :db.type/string
  :db/unique :db.unique/identity
  :db/cardinality :db.cardinality/one
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db]
  :db/ident :trip/service
  :db/valueType :db.type/ref
  :db/cardinality :db.cardinality/one
  :db/doc "The service_id contains an ID that uniquely identifies a set of dates when service is available for one or more routes. This value is referenced from the calendar.txt or calendar_dates.txt file."
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db]
  :db/ident :trip/short-name
  :db/valueType :db.type/string
  :db/cardinality :db.cardinality/one
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db]
  :db/ident :trip/headsign
  :db/valueType :db.type/string
  :db/cardinality :db.cardinality/one
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db] ; TODO: might update to enum
  :db/ident :trip/direction
  :db/valueType :db.type/boolean
  :db/cardinality :db.cardinality/one
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db] ; TODO: this might need to be an entity
  :db/ident :trip/block
  :db/valueType :db.type/string
  :db/cardinality :db.cardinality/one
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db]
  :db/ident :trip/shape
  :db/index true
  :db/valueType :db.type/ref
  :db/cardinality :db.cardinality/one
  :db/doc "The shape_id field contains an ID that defines a shape for the trip. This value is referenced from the shapes.txt file. The shapes.txt file allows you to define how a line should be drawn on the map to represent a trip."
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db]
  :db/ident :trip/wheelchair-accessible?
  :db/valueType :db.type/long
  :db/cardinality :db.cardinality/one
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db]
  :db/ident :trip/frequency
  :db/index true
  :db/valueType :db.type/ref
  :db/isComponent true
  :db/cardinality :db.cardinality/many
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db]
  :db/ident :trip/stops
  :db/index true
  :db/valueType :db.type/ref
  :db/isComponent true
  :db/cardinality :db.cardinality/many
  :db.install/_attribute :db.part/db}

 ;; frequencies
 {:db/id #db/id[:db.part/db]
  :db/ident :trip.frequency/start-time
  :db/valueType :db.type/string
  :db/cardinality :db.cardinality/one
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db]
  :db/ident :trip.frequency/end-time
  :db/valueType :db.type/string
  :db/cardinality :db.cardinality/one
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db]
  :db/ident :trip.frequency/headway-seconds
  :db/valueType :db.type/long
  :db/cardinality :db.cardinality/one
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db]
  :db/ident :trip.frequency/exact-times?
  :db/valueType :db.type/boolean
  :db/cardinality :db.cardinality/one
  :db.install/_attribute :db.part/db}

 ;; stop-times ; TODO: should update the relationship as many-to-many directly
 {:db/id #db/id[:db.part/db]
  :db/ident :stop-time/stop-sequence
  :db/index true
  :db/valueType :db.type/long
  :db/cardinality :db.cardinality/one
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db]
  :db/ident :stop-time/stop
  :db/index true
  :db/valueType :db.type/ref
  :db/cardinality :db.cardinality/one
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db]
  :db/ident :stop-time/arrival-time
  :db/valueType :db.type/string
  :db/cardinality :db.cardinality/one
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db]
  :db/ident :stop-time/departure-time
  :db/valueType :db.type/string
  :db/cardinality :db.cardinality/one
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db]
  :db/ident :stop-time/stop-headsign
  :db/valueType :db.type/string
  :db/cardinality :db.cardinality/one
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db] ; TODO might update to enum
  :db/ident :stop-time/pickup-type
  :db/index true
  :db/valueType :db.type/long
  :db/cardinality :db.cardinality/one
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db] ; TODO might update to enum
  :db/ident :stop-time/drop-off-type
  :db/index true
  :db/valueType :db.type/long
  :db/cardinality :db.cardinality/one
  :db.install/_attribute :db.part/db}

 {:db/id #db/id[:db.part/db] ; TODO might update to enum
  :db/ident :stop-time/shape-distance-traveled
  :db/valueType :db.type/double
  :db/cardinality :db.cardinality/one
  :db.install/_attribute :db.part/db}
 ]
